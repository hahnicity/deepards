# Default arguments for training purposes. You can override them by creating a new
# yml file and just setting new values for any argument listed in this file. Order of
# variable precedence is like so:
#
# 1.) CLI
# 2.) Overrides file
# 3.) Defaults file
#
# NOTE: true/false flag args *SHOULD* not be set here, only string/float/int values

# generic training options
data_path: /fastdata/ardsdetection
experiment_num: 1
cohort_file: cohort-description.csv
network: cnn_lstm
epochs: 10
batch_size: 16
base_network: densenet18
loss_calc: all_breaths
loader_threads: 0

# resnet options
initial_planes: 64
resnet_first_pool_type: max

# main hyperparameters
optimizer: sgd
dataset_type: unpadded_centered_sequences
learning_rate: 0.001
n_sub_batches: 20
weight_decay: 0.0001
loss_func: bce
clip_val: 0.01

time_series_hidden_units: 16
transformer_blocks: 2

# focal loss. Use defaults as given in torchvision.ops.focal_loss
fl_gamma: 2.0
fl_alpha: 0.25

# stop if loss too high
stop_thresh: 1.5
stop_after_epoch: 1

# augmentation options
transform_probability: .2

# protopnet
n_warm_epochs: 3
push_start_epoch: 6
clust_lambda: 0.8
sep_lambda: 0.2
viz_start_epoch: 6
push_every_n: 6
n_push_iters: 5
viz_every_n: 4
prototype_results_dir: prototype_results/
prototype_fname_prefix: proto
n_prototypes: 10
incorrect_strength: -0.5

# other options
holdout_set_type: main
train_pt_frac: 1.0
downsample_factor: 4.0
cuda_device: 0
drop_if_under_r2: 0
oversample_all_factor: 1.0
undersample_factor: -1
undersample_std_factor: 0.2
two_dim_transforms: []
block_kernel_size: 3
bbox_train_epochs: 15
